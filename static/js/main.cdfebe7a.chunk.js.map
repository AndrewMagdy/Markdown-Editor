{"version":3,"sources":["utils/parseSourcePos.js","components/Editor.js","components/PrismCodeHighlight.js","components/Preview.js","components/InsertDialog.js","assets/markdownSamples.js","components/AppTopBar.js","App.js","serviceWorker.js","index.js"],"names":["parseSourcePos","sourcePos","firstDoubleDotIdx","indexOf","startLineNum","parseInt","slice","secondDoubleDotIdx","dashIdx","endLineNum","Editor","React","forwardRef","ref","input","setInput","setDidScroll","handleScroll","debounce","e","currLineNum","firstVisibleLine","current","editor","getFirstVisibleRow","lastVisibleLine","getLastVisibleRow","lineNum","i","env","document","getLine","getFirstVisibleLine","allNodes","querySelectorAll","node","sourcePosStr","getAttribute","scrollIntoView","behavior","style","width","height","mode","theme","onChange","newValue","onScroll","fontSize","showPrintMargin","showGutter","highlightActiveLine","value","editorProps","$blockScrolling","enableBasicAutocompletion","enableLiveAutocompletion","PrismCodeHighlighter","language","prism","useStyles","makeStyles","container","maxHeight","overflowY","Preview","editorRef","didScroll","classes","offsetTop","scrollTop","scrollToLine","Fragment","className","source","rawSourcePos","renderers","code","PrismCodeHighlight","InsertDialog","title","icon","action","useState","open","setOpen","setValue","handleClose","IconButton","color","aria-label","onClick","Dialog","onClose","aria-labelledby","DialogTitle","id","DialogContent","TextField","autoFocus","margin","label","event","target","fullWidth","DialogActions","Button","markdownSample1","menuButton","marginRight","spacing","grow","flexGrow","AppTopBar","anchorEl","setAnchorEl","changeMarkDownSample","sample","modifySelectedText","beforeStr","afterStr","emptyStr","atLineStart","selectionRange","getSelectionRange","isEmpty","start","row","end","column","session","insert","AppBar","position","Toolbar","edge","currentTarget","aria-controls","aria-haspopup","Menu","keepMounted","Boolean","MenuItem","ListItemText","primary","undo","redo","link","Typography","variant","App","useRef","previewRef","Grid","item","xs","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cdfebe7a.chunk.js","sourcesContent":["\nexport const parseSourcePos = sourcePos => {\n  const firstDoubleDotIdx = sourcePos.indexOf(\":\");\n  const startLineNum = parseInt(sourcePos.slice(0, firstDoubleDotIdx));\n  const secondDoubleDotIdx = sourcePos.indexOf(\":\", firstDoubleDotIdx + 1);\n  const dashIdx = sourcePos.indexOf(\"-\");\n  const endLineNum = parseInt(sourcePos.slice(dashIdx + 1, secondDoubleDotIdx));\n\n  return { startLineNum, endLineNum };\n};\n\n","import React from \"react\";\nimport AceEditor from \"react-ace\";\nimport { debounce } from \"lodash\";\nimport \"brace/mode/markdown\";\nimport \"brace/theme/monokai\";\nimport \"brace/ext/searchbox\";\nimport \"brace/ext/language_tools\";\nimport { parseSourcePos } from \"../utils/parseSourcePos\";\n\nconst Editor = React.forwardRef(({ input, setInput, setDidScroll }, ref) => {\n  // Get First Non Empty Line in visible text\n  const getFirstVisibleLine = () => {\n    const firstVisibleLine = ref.current.editor.getFirstVisibleRow();\n    const lastVisibleLine = ref.current.editor.getLastVisibleRow();\n    let lineNum = firstVisibleLine;\n\n    for (let i = firstVisibleLine; i <= lastVisibleLine; ++i) {\n      const line = ref.current.editor.env.document.getLine(i);\n      if (line !== \"\") {\n        lineNum = i + 1; // Preview lines start from 1 not 0\n        break;\n      }\n    }\n    return lineNum;\n  };\n\n  // TODO add maping data structure to improve performance\n  // Data structure should be constructed in handle Change and used in handleScroll\n  const handleScroll = debounce(e => {\n    const currLineNum = getFirstVisibleLine();\n\n    const allNodes = document.querySelectorAll(\"[data-sourcepos]\");\n    for (const node of allNodes) {\n      const sourcePosStr = node.getAttribute(\"data-sourcepos\");\n      const { startLineNum, endLineNum } = parseSourcePos(sourcePosStr);\n\n      if (currLineNum >= startLineNum && currLineNum <= endLineNum) {\n        node.scrollIntoView({ behavior: \"smooth\" });\n        setDidScroll(true);\n        break;\n      }\n    }\n  }, 500);\n\n  const handleChange = newValue => {\n    setInput(newValue);\n    // const allNodes = document.querySelectorAll(\"[data-sourcepos]\");\n    // for (const node of allNodes) {\n    //   console.log(node.offsetHeight);\n    // }\n  };\n\n  return (\n    <AceEditor\n      style={{\n        width: \"100%\",\n        height: \"calc(100vh - 64px)\"\n      }}\n      ref={ref}\n      mode=\"markdown\"\n      theme=\"monokai\"\n      onChange={handleChange}\n      onScroll={handleScroll}\n      fontSize={14}\n      showPrintMargin={true}\n      showGutter={true}\n      highlightActiveLine={true}\n      value={input}\n      editorProps={{ $blockScrolling: true }}\n      enableBasicAutocompletion={true}\n      enableLiveAutocompletion={true}\n    />\n  );\n});\n\nexport default Editor;\n","import React from \"react\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport prism from \"react-syntax-highlighter/dist/esm/styles/prism/prism\";\n\nconst PrismCodeHighlighter = ({ language, value }) => (\n  <SyntaxHighlighter language={language} style={prism}>\n    {value}\n  </SyntaxHighlighter>\n);\n\nexport default PrismCodeHighlighter;\n","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { debounce } from \"lodash\";\nimport { parseSourcePos } from \"../utils/parseSourcePos\";\nimport PrismCodeHighlight from \"./PrismCodeHighlight\";\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    maxHeight: \"calc(100vh - 64px)\",\n    overflowY: \"scroll\"\n  }\n}));\n\nconst Preview = React.forwardRef(\n  ({ input, editorRef, didScroll, setDidScroll }, ref) => {\n    const classes = useStyles();\n\n    // TODO add maping data structure to improve performance\n    // Data structure should be constructed in handle Change and used in handleScroll\n    const handleScroll = debounce(e => {\n      if (didScroll) {\n        setDidScroll(false);\n        return;\n      }\n      const allNodes = document.querySelectorAll(\"[data-sourcepos]\");\n      for (const node of allNodes) {\n        if (node.offsetTop > ref.current.scrollTop + ref.current.offsetTop) {\n          const sourcePosStr = node.getAttribute(\"data-sourcepos\");\n          const { startLineNum } = parseSourcePos(sourcePosStr);\n\n          editorRef.current.editor.scrollToLine(startLineNum - 1, false, true);\n          setDidScroll(true);\n          break;\n        }\n      }\n    }, 500);\n\n    return (\n      <React.Fragment>\n        <div className={classes.container} ref={ref} onScroll={handleScroll}>\n          <ReactMarkdown\n            source={input}\n            sourcePos\n            rawSourcePos\n            renderers={{ code: PrismCodeHighlight }}\n          />\n        </div>\n      </React.Fragment>\n    );\n  }\n);\n\nexport default Preview;\n","import React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nconst InsertDialog = ({ title, icon, action }) => {\n  const [open, setOpen] = useState(false);\n  const [value, setValue] = useState(\"\");\n\n  const handleChange = event => {\n    setValue(event.target.value);\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSubmit = () => {\n    action(value);\n    handleClose(value);\n  };\n\n  return (\n    <React.Fragment>\n      <IconButton\n        color=\"inherit\"\n        aria-label={`Insert ${title}`}\n        onClick={handleClickOpen}\n      >\n        {icon}\n      </IconButton>\n\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby={`insert${title}-dialog`}\n      >\n        <DialogTitle id={`insert${title}-dialog`}>Add {title} </DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            label={title}\n            value={value}\n            onChange={handleChange}\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleSubmit} color=\"primary\">\n            Add Link\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </React.Fragment>\n  );\n};\n\nexport default InsertDialog;\n","export const markdownSample1 = `# [React](https://reactjs.org/) &middot; [![GitHub license](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/facebook/react/blob/master/LICENSE) [![npm version](https://img.shields.io/npm/v/react.svg?style=flat)](https://www.npmjs.com/package/react) [![CircleCI Status](https://circleci.com/gh/facebook/react.svg?style=shield&circle-token=:circle-token)](https://circleci.com/gh/facebook/react) [![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](https://reactjs.org/docs/how-to-contribute.html#your-first-pull-request)\n\nReact is a JavaScript library for building user interfaces.\n\n* **Declarative:** React makes it painless to create interactive UIs. Design simple views for each state in your application, and React will efficiently update and render just the right components when your data changes. Declarative views make your code more predictable, simpler to understand, and easier to debug.\n* **Component-Based:** Build encapsulated components that manage their own state, then compose them to make complex UIs. Since component logic is written in JavaScript instead of templates, you can easily pass rich data through your app and keep state out of the DOM.\n* **Learn Once, Write Anywhere:** We don't make assumptions about the rest of your technology stack, so you can develop new features in React without rewriting existing code. React can also render on the server using Node and power mobile apps using [React Native](https://facebook.github.io/react-native/).\n\n[Learn how to use React in your own project](https://reactjs.org/docs/getting-started.html).\n\n## Installation\n\nReact has been designed for gradual adoption from the start, and **you can use as little or as much React as you need**:\n\n* Use [Online Playgrounds](https://reactjs.org/docs/getting-started.html#online-playgrounds) to get a taste of React.\n* [Add React to a Website](https://reactjs.org/docs/add-react-to-a-website.html) as a \\`<script>\\` tag in one minute.\n* [Create a New React App](https://reactjs.org/docs/create-a-new-react-app.html) if you're looking for a powerful JavaScript toolchain.\n\nYou can use React as a \\`<script>\\` tag from a [CDN](https://reactjs.org/docs/cdn-links.html), or as a \\`react\\` package on [npm](https://www.npmjs.com/).\n\n## Documentation\n\nYou can find the React documentation [on the website](https://reactjs.org/docs).  \n\nCheck out the [Getting Started](https://reactjs.org/docs/getting-started.html) page for a quick overview.\n\nThe documentation is divided into several sections:\n\n* [Tutorial](https://reactjs.org/tutorial/tutorial.html)\n* [Main Concepts](https://reactjs.org/docs/hello-world.html)\n* [Advanced Guides](https://reactjs.org/docs/jsx-in-depth.html)\n* [API Reference](https://reactjs.org/docs/react-api.html)\n* [Where to Get Support](https://reactjs.org/community/support.html)\n* [Contributing Guide](https://reactjs.org/docs/how-to-contribute.html)\n\nYou can improve it by sending pull requests to [this repository](https://github.com/reactjs/reactjs.org).\n\n## Examples\n\nWe have several examples [on the website](https://reactjs.org/). Here is the first one to get you started:\n\n\\`\\`\\`jsx\nfunction HelloMessage({ name }) {\n  return <div>Hello {name}</div>;\n}\n\nReactDOM.render(\n  <HelloMessage name=\"Taylor\" />,\n  document.getElementById('container')\n);\n\\`\\`\\`\n\nThis example will render \"Hello Taylor\" into a container on the page.\n\nYou'll notice that we used an HTML-like syntax; [we call it JSX](https://reactjs.org/docs/introducing-jsx.html). JSX is not required to use React, but it makes code more readable, and writing it feels like writing HTML. If you're using React as a \\`<script>\\` tag, read [this section](https://reactjs.org/docs/add-react-to-a-website.html#optional-try-react-with-jsx) on integrating JSX; otherwise, the [recommended JavaScript toolchains](https://reactjs.org/docs/create-a-new-react-app.html) handle it automatically.\n\n## Contributing\n\nThe main purpose of this repository is to continue to evolve React core, making it faster and easier to use. Development of React happens in the open on GitHub, and we are grateful to the community for contributing bugfixes and improvements. Read below to learn how you can take part in improving React.\n\n### [Code of Conduct](https://code.fb.com/codeofconduct)\n\nFacebook has adopted a Code of Conduct that we expect project participants to adhere to. Please read [the full text](https://code.fb.com/codeofconduct) so that you can understand what actions will and will not be tolerated.\n\n### [Contributing Guide](https://reactjs.org/contributing/how-to-contribute.html)\n\nRead our [contributing guide](https://reactjs.org/contributing/how-to-contribute.html) to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to React.\n\n### Good First Issues\n\nTo help you get your feet wet and get you familiar with our contribution process, we have a list of [good first issues](https://github.com/facebook/react/labels/good%20first%20issue) that contain bugs which have a relatively limited scope. This is a great place to get started.\n\n### License\n\nReact is [MIT licensed](./LICENSE).\n`;\n\nexport const markdownSample2 = `\n\n# h1 Heading 8-)\n## h2 Heading\n### h3 Heading\n#### h4 Heading\n##### h5 Heading\n###### h6 Heading\n\n\n## Horizontal Rules\n\n___\n\n---\n\n***\n\n\n## Typographic replacements\n\nEnable typographer option to see result.\n\n(c) (C) (r) (R) (tm) (TM) (p) (P) +-\n\ntest.. test... test..... test?..... test!....\n\n!!!!!! ???? ,,  -- ---\n\n\"Smartypants, double quotes\" and 'single quotes'\n\n\n## Emphasis\n\n**This is bold text**\n\n__This is bold text__\n\n*This is italic text*\n\n_This is italic text_\n\n~~Strikethrough~~\n\n\n## Blockquotes\n\n\n> Blockquotes can also be nested...\n>> ...by using additional greater-than signs right next to each other...\n> > > ...or with spaces between arrows.\n\n\n## Lists\n\nUnordered\n\n+ Create a list by starting a line with \\`+\\`, \\`-\\`, or \\`*\\`\n+ Sub-lists are made by indenting 2 spaces:\n  - Marker character change forces new list start:\n    * Ac tristique libero volutpat at\n    + Facilisis in pretium nisl aliquet\n    - Nulla volutpat aliquam velit\n+ Very easy!\n\nOrdered\n\n1. Lorem ipsum dolor sit amet\n2. Consectetur adipiscing elit\n3. Integer molestie lorem at massa\n\n\n1. You can use sequential numbers...\n1. ...or keep all the numbers as \\`1.\\`\n\nStart numbering with offset:\n\n57. foo\n1. bar\n\n\n## Code\n\nInline \\`code\\`\n\nIndented code\n\n    // Some comments\n    line 1 of code\n    line 2 of code\n    line 3 of code\n\n\nBlock code \"fences\"\n\n\\`\\`\\`\nSample text here...\n\\`\\`\\`\n\nSyntax highlighting\n\n\\`\\`\\` js\nvar foo = function (bar) {\n  return bar++;\n};\n\nconsole.log(foo(5));\n\\`\\`\\`\n\n## Tables\n\n| Option | Description |\n| ------ | ----------- |\n| data   | path to data files to supply the data that will be passed into templates. |\n| engine | engine to be used for processing templates. Handlebars is the default. |\n| ext    | extension to be used for dest files. |\n\nRight aligned columns\n\n| Option | Description |\n| ------:| -----------:|\n| data   | path to data files to supply the data that will be passed into templates. |\n| engine | engine to be used for processing templates. Handlebars is the default. |\n| ext    | extension to be used for dest files. |\n\n\n## Links\n\n[link text](http://dev.nodeca.com)\n\n[link with title](http://nodeca.github.io/pica/demo/ \"title text!\")\n\nAutoconverted link https://github.com/nodeca/pica (enable linkify to see)\n\n\n## Images\n\n![Minion](https://octodex.github.com/images/minion.png)\n![Stormtroopocat](https://octodex.github.com/images/stormtroopocat.jpg \"The Stormtroopocat\")\n\nLike links, Images also have a footnote style syntax\n\n![Alt text][id]\n\nWith a reference later in the document defining the URL location:\n\n[id]: https://octodex.github.com/images/dojocat.jpg  \"The Dojocat\"\n\n\n## Plugins\n\nThe killer feature of \\`markdown-it\\` is very effective support of\n[syntax plugins](https://www.npmjs.org/browse/keyword/markdown-it-plugin).\n\n\n### [Emojies](https://github.com/markdown-it/markdown-it-emoji)\n\n> Classic markup: :wink: :crush: :cry: :tear: :laughing: :yum:\n>\n> Shortcuts (emoticons): :-) :-( 8-) ;)\n\nsee [how to change output](https://github.com/markdown-it/markdown-it-emoji#change-output) with twemoji.\n\n\n### [Subscript](https://github.com/markdown-it/markdown-it-sub) / [Superscript](https://github.com/markdown-it/markdown-it-sup)\n\n- 19^th^\n- H~2~O\n\n\n### [\\<ins>](https://github.com/markdown-it/markdown-it-ins)\n\n++Inserted text++\n\n\n### [\\<mark>](https://github.com/markdown-it/markdown-it-mark)\n\n==Marked text==\n\n\n### [Footnotes](https://github.com/markdown-it/markdown-it-footnote)\n\nFootnote 1 link[^first].\n\nFootnote 2 link[^second].\n\nInline footnote^[Text of inline footnote] definition.\n\nDuplicated footnote reference[^second].\n\n[^first]: Footnote **can have markup**\n\n    and multiple paragraphs.\n\n[^second]: Footnote text.\n\n\n### [Definition lists](https://github.com/markdown-it/markdown-it-deflist)\n\nTerm 1\n\n:   Definition 1\nwith lazy continuation.\n\nTerm 2 with *inline markup*\n\n:   Definition 2\n\n        { some code, part of Definition 2 }\n\n    Third paragraph of definition 2.\n\n_Compact style:_\n\nTerm 1\n  ~ Definition 1\n\nTerm 2\n  ~ Definition 2a\n  ~ Definition 2b\n\n\n### [Abbreviations](https://github.com/markdown-it/markdown-it-abbr)\n\nThis is HTML abbreviation example.\n\nIt converts \"HTML\", but keep intact partial entries like \"xxxHTMLyyy\" and so on.\n\n*[HTML]: Hyper Text Markup Language\n\n### [Custom containers](https://github.com/markdown-it/markdown-it-container)\n\n::: warning\n*here be dragons*\n:::\n`;\n","import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InsertDialog from \"./InsertDialog\";\n\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport RedoIcon from \"@material-ui/icons/Redo\";\nimport CodeIcon from \"@material-ui/icons/Code\";\nimport BoldIcon from \"@material-ui/icons/FormatBold\";\nimport ItalicIcon from \"@material-ui/icons/FormatItalic\";\nimport HeaderIcon from \"@material-ui/icons/TextRotateUp\";\nimport StrikeThroughIcon from \"@material-ui/icons/StrikethroughS\";\nimport InsertLinkIcon from \"@material-ui/icons/InsertLink\";\nimport InsertImageIcon from \"@material-ui/icons/AddPhotoAlternate\";\n\nimport { markdownSample1, markdownSample2 } from \"../assets/markdownSamples\";\n\nconst useStyles = makeStyles(theme => ({\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  grow: {\n    flexGrow: 1\n  }\n}));\n\nconst AppTopBar = ({ editorRef, setInput }) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const classes = useStyles();\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const changeMarkDownSample = sample => {\n    setInput(sample);\n    handleClose();\n  };\n\n  const modifySelectedText = (\n    beforeStr,\n    afterStr,\n    emptyStr = \"No text\",\n    atLineStart = false\n  ) => {\n    let selectionRange = editorRef.current.editor.getSelectionRange();\n    const isEmpty =\n      selectionRange.start.row === selectionRange.end.row &&\n      selectionRange.start.column === selectionRange.end.column;\n\n    if (atLineStart) {\n      editorRef.current.editor.session.insert(\n        { ...selectionRange.start, column: 0 },\n        beforeStr\n      );\n      return;\n    }\n    editorRef.current.editor.session.insert(selectionRange.start, beforeStr);\n    selectionRange = editorRef.current.editor.getSelectionRange();\n\n    if (isEmpty) {\n      editorRef.current.editor.session.insert(\n        selectionRange.start,\n        emptyStr + afterStr\n      );\n    } else {\n      editorRef.current.editor.session.insert(selectionRange.end, afterStr);\n    }\n  };\n\n  const makeBold = () => modifySelectedText(\"**\", \"**\", \"Bold Text\");\n  const makeItalic = () => modifySelectedText(\"*\", \"*\", \"Italic Text\");\n  const makeStrikeThrough = () =>\n    modifySelectedText(\"~~\", \"~~\", \"StrikeThrough Text\");\n  const makeHeading = () => modifySelectedText(\"# \", \"\", \"Header Text\", true);\n  const makeLink = link => modifySelectedText(\"[\", `](${link})`, \"Link Text\");\n  const makeImage = link =>\n    modifySelectedText(\"![\", `](${link})`, \"Image Text\");\n\n  return (\n    <React.Fragment>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n          >\n            <MenuIcon />\n          </IconButton>\n\n          <IconButton\n            edge=\"start\"\n            onClick={handleClick}\n            color=\"inherit\"\n            aria-label=\"open sample codes menu\"\n            aria-controls=\"sample-codes-menu\"\n            aria-haspopup=\"true\"\n          >\n            <CodeIcon />\n          </IconButton>\n\n          <Menu\n            id=\"sample-codes-menu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleClose}\n          >\n            <MenuItem>\n              <ListItemText\n                onClick={() => {\n                  changeMarkDownSample(markdownSample1);\n                }}\n                primary=\"Project Read Me\"\n              />\n            </MenuItem>\n            <MenuItem>\n              <ListItemText\n                onClick={() => {\n                  changeMarkDownSample(markdownSample1);\n                }}\n                primary=\"React Read Me\"\n              />\n            </MenuItem>\n            <MenuItem>\n              <ListItemText\n                onClick={() => {\n                  changeMarkDownSample(markdownSample2);\n                }}\n                primary=\"Sample Markdown\"\n              />\n            </MenuItem>\n          </Menu>\n\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"undo\"\n            onClick={() => editorRef.current.editor.undo()}\n          >\n            <UndoIcon />\n          </IconButton>\n\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"redo\"\n            onClick={() => editorRef.current.editor.redo()}\n          >\n            <RedoIcon />\n          </IconButton>\n\n          <IconButton color=\"inherit\" aria-label=\"Bold\" onClick={makeBold}>\n            <BoldIcon />\n          </IconButton>\n\n          <IconButton color=\"inherit\" aria-label=\"Italic\" onClick={makeItalic}>\n            <ItalicIcon />\n          </IconButton>\n\n          <IconButton color=\"inherit\" aria-label=\"Header\" onClick={makeHeading}>\n            <HeaderIcon />\n          </IconButton>\n\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"Strike Through\"\n            onClick={makeStrikeThrough}\n          >\n            <StrikeThroughIcon />\n          </IconButton>\n\n          <InsertDialog\n            title={\"Link\"}\n            icon={<InsertLinkIcon />}\n            action={makeLink}\n          />\n          <InsertDialog\n            title={\"Image\"}\n            icon={<InsertImageIcon />}\n            action={makeImage}\n          />\n\n          <div className={classes.grow} />\n\n          <Typography variant=\"h6\">MarkDown Editor</Typography>\n        </Toolbar>\n      </AppBar>\n    </React.Fragment>\n  );\n};\n\nexport default AppTopBar;\n","import React, { useState, useRef } from \"react\";\nimport { Grid } from \"@material-ui/core/\";\n\nimport Editor from \"./components/Editor\";\nimport Preview from \"./components/Preview\";\nimport AppTopBar from \"./components/AppTopBar\";\n\nfunction App() {\n  const defaultInput = \"# This is a header\\n\\nAnd this is a paragraph\";\n  const [input, setInput] = useState(defaultInput);\n  const [didScroll, setDidScroll] = useState(false);\n  const editorRef = useRef(null);\n  const previewRef = useRef(null);\n\n  return (\n    <React.Fragment>\n      <AppTopBar editorRef={editorRef} setInput={setInput} />\n      <Grid container>\n        <Grid item xs={6}>\n          <Editor\n            ref={editorRef}\n            input={input}\n            setInput={setInput}\n            didScroll={didScroll}\n            setDidScroll={setDidScroll}\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <Preview\n            ref={previewRef}\n            input={input}\n            editorRef={editorRef}\n            didScroll={didScroll}\n            setDidScroll={setDidScroll}\n          />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}